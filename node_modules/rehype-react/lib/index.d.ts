export default function rehypeReact(
  this: import('unified').Processor<
    void,
    import('hast').Root,
    import('hast').Root,
    import('react').ReactElement<
      unknown,
      string | import('react').JSXElementConstructor<any>
    >
  >,
  settings_0: Options
): void
export type Root = import('hast').Root
export type ReactNode = import('react').ReactNode
export type ReactElement = import('react').ReactElement<unknown>
export type CreateElementLike = (
  name: any,
  props: any,
  ...children: ReactNode[]
) => ReactNode
/**
 * Base configuration (without `components`).
 */
export type SharedOptions = {
  /**
   * How to create elements or components.
   * You should typically pass `React.createElement`.
   */
  createElement: CreateElementLike
  /**
   * Create fragments instead of an outer `<div>` if available.
   * You should typically pass `React.Fragment`.
   */
  Fragment?: ((props: any) => ReactNode) | undefined
  /**
   * React key prefix.
   */
  prefix?: string | undefined
}
/**
 * Configuration.
 */
export type Options = SharedOptions &
  (
    | import('./complex-types').ComponentsWithNodeOptions
    | import('./complex-types').ComponentsWithoutNodeOptions
  )
